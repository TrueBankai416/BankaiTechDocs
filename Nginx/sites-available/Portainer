map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}
server {
    listen 80;
    listen [::]:80;
    server_name docker.bankai-tech.com;
    #          Redirect to https version of website
    return 301 https://docker.bankai-tech.com;
    #          Logging
    access_log /var/log/nginx/Portainer_access.log;
    error_log /var/log/nginx/Portainer_error.log;
}
server {
    listen [::]:443 ssl http2;
    listen 443 ssl http2;
    server_name docker.bankai-tech.com;
    #          Load TLS Certs
    ssl_certificate /etc/letsencrypt/live/bankai-tech.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/bankai-tech.com/privkey.pem;
    proxy_ssl_trusted_certificate /etc/letsencrypt/live/bankai-tech.com/chain.pem;
    #    ssl_stapling on;
    #    ssl_stapling_verify on;
    #          Logging
    access_log /var/log/nginx/Portainer_access.log;
    error_log /var/log/nginx/Portainer_error.log;
    #          Security Headers
    add_header Expect-CT "enforce, max-age=31536000";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header Permissions-Policy "accelerometer=(),ambient-light-sensor=(),autoplay=(),battery=(),camera=(),cross-origin-isolated=(self),display-capture=(),document-domain=(),encrypted-media=(),execution-while-not-rendered=(),execution-while-out-of-viewport=(),fullscreen=(self),geolocation=(),gyroscope=(),hid=(),idle-detection=(),magnetometer=(),microphone=(),midi=(),navigation-override=(),payment=(),picture-in-picture=(),publickey-credentials-get=(),screen-wake-lock=(),serial=(),sync-xhr=(),usb=(),web-share=(),web-share=(),clipboard-read=(self),clipboard-write=(self)";
    #          Allow upload of large files
    client_max_body_size 0;
    #          Cache
    proxy_cache_key $scheme$proxy_host$request_uri;
    add_header X-Cache-Status $upstream_cache_status;
    client_header_buffer_size 50m;
    client_body_buffer_size 50m;
    client_body_timeout 300s;
    #          Connect to backend server
    location / {
        proxy_set_header Host $host;
        proxy_set_header CF-Connecting-IP $proxy_add_x_forwarded_for;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
        proxy_cookie_path / "/; SameSite=strict; HTTPOnly; Secure";
        proxy_http_version 1.1;
        proxy_set_header "Connection" "";
        proxy_set_header Upgrade $http_upgrade;
        proxy_pass https://192.168.4.206:9443;
        proxy_read_timeout 300s;
        #Cache
        proxy_buffering on;
        proxy_cache_valid 200;
        proxy_cache_background_update on;
    }
    location /authelia {
        internal;
        #ADD YOUR IP AND PORT OF AUTHELIA
        set $upstream_authelia http://192.168.4.202:9091/api/verify;
        proxy_pass_request_body off;
        proxy_pass $upstream_authelia;
        proxy_set_header Content-Length "";
        # Timeout if the real server is dead
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
        client_body_buffer_size 128k;
        proxy_set_header Host $host;
        proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Uri $request_uri;
        proxy_set_header X-Forwarded-Ssl on;
        proxy_redirect http:// $scheme://;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_cache_bypass $cookie_session;
        proxy_no_cache $cookie_session;
        proxy_buffers 4 32k;
        send_timeout 5m;
        proxy_read_timeout 240;
        proxy_send_timeout 240;
        proxy_connect_timeout 240;
    }
}