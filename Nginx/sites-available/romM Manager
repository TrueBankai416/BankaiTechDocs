server {
    listen 80;
    server_name romm.lunekes.com;
    return 301 https://$server_name$request_uri;
}
server {
    listen 443 ssl http2;
    server_name romm.lunekes.com;
    #                      The default `client_max_body_size` is 1M, this might not be enough for some posters, etc.
    client_max_body_size 0;
    #                      use a variable to store the upstream proxy
    #                      in this example we are using a hostname which is resolved via DNS
    #                      (if you aren't using DNS remove the resolver line and change the variable to point to an IP address e.g `set $jellyfin 127.0.0.1`)
    set $romm 192.168.4.31:83;
    #                                             Load TLS Certs
    ssl_certificate /etc/letsencrypt/live/lunekes.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/lunekes.com/privkey.pem;
    proxy_ssl_trusted_certificate /etc/letsencrypt/live/lunekes.com/chain.pem;
    
    # Hide version
    server_tokens off;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Expect-CT "enforce, max-age=31536000";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    location / {
        # Proxy main RomM traffic
        proxy_pass http://$romm;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Protocol $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
    }
}